apiVersion: v1
kind: Namespace
metadata:
  name: discord-bot

---
# kubectl create secret docker-registry NAME --docker-username=user --docker-password=password --docker-email=email [--docker-server=string] [--from-literal=key1=value1] [--dry-run] 
# echo -n "username:token" | base64
# echo -n  '{"auths":{"ghcr.io":{"auth":"base64-encoded secret from above"}}}' | base64
apiVersion: v1
kind: Secret
metadata:
  name: ghcr-creds
  namespace: discord-bot
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: VERYBASESECRET

---
apiVersion: v1
kind: Secret
metadata:
  name: github-token
  namespace: discord-bot
type: Opaque
data:
  token: VERYBASESECRET
  # /bin/bash -c 'echo -n "VERYSECRET" | base64'

---
apiVersion: v1
kind: Secret
metadata:
  name: discord-token
  namespace: discord-bot
type: Opaque
data:
  token: VERYBASESECRET
  # /bin/bash -c 'echo -n "VERYSECRET" | base64'

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: bot-configmap
  namespace: discord-bot
data:
  REPO_LIST: "xamma/testrepo123, xamma/testrepo234"
  DISCORD_CHANNEL_ID: "1082199072984797245"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name:  discord-bot-dep
  namespace: discord-bot
  labels:
    app: github-monitor
spec:
  selector:
    matchLabels:
      app: github-monitor
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: github-monitor
    spec:
      imagePullSecrets:
      - name:  ghcr-creds
      containers:
      - image: ghcr.io/xamma/github-monitor:latest
        imagePullPolicy: Always
        name:  discord-bot
        resources:
          requests:
            cpu: "20m"
            memory: "55M"
        env:
          - name: REPO_LIST
            valueFrom:
              configMapKeyRef:
                name: bot-configmap
                key: REPO_LIST
          - name: DISCORD_CHANNEL_ID
            valueFrom:
              configMapKeyRef:
                name: bot-configmap
                key: DISCORD_CHANNEL_ID
          - name: GITHUB_TOKEN
            valueFrom:
              secretKeyRef:
                name: github-token
                key: token
          - name: DISCORD_TOKEN
            valueFrom:
              secretKeyRef:
                name: discord-token
                key: token 
        # ports:
        # - containerPort:  5000
        #   name:  my-name
      restartPolicy: Always

# not needed here, but for completeness
# ---
# kind: Service
# apiVersion: v1
# metadata:
#   name: discord-bot-svc
#   namespace: discord-bot
# spec:
#   selector:
#     app:  github-monitor
#   type: ClusterIP
#   ports:
#   - name:  name-of-the-port
#     port:  80
#     targetPort:  8080